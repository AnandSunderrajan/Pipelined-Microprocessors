import LC_3B_2s::*;

module projtoplevel
(
    input clk,
	 input logic physicalmem_mem_response,
	 input cache_line physicalmem_mem_rdata,
	 output logic physicalmem_mem_read,
	 output logic physicalmem_mem_write,
	 output logic [1:0] physicalmem_byte_enable,
	 output cache_line physicalmem_mem_wdata,
	 output LC_3B_word physicalmem_mem_addr
	 
);
/*Begin internal signals*/
	/*CPU internal signals*/
		LC_3B_word internal_mem_addr;
		LC_3B_word internal_mem_wdata;
		logic internal_mem_read;
		logic internal_mem_write;
		logic [1:0] internal_mem_byte_enable;
		LC_3B_word internal_mem_rdata;
		logic internal_mem_response;
		
		LC_3B_word d_mem_addr;
		LC_3B_word d_mem_wdata;
		logic d_mem_read;
		logic d_mem_write;
		logic [1:0] d_mem_byte_enable;
		LC_3B_word d_mem_rdata;
		logic d_mem_response;
		logic DCache_enable;
	/*L1 I cache internal signals*/
		LC_3B_word i_physicalmem_addr;
		cache_line i_physicalmem_wdata;
		logic i_readphysicalmem;
		logic i_writephysicalmem;
		logic [1:0] i_physicalmem_byte_enable;
		cache_line i_physicalmem_rdata;
		logic i_physicalmem_response;
		logic TRUE_BR;
		logic idle_state;
	/*L1 D cache internal signals*/
		LC_3B_word d_physicalmem_addr;
		cache_line d_physicalmem_wdata;
		logic d_readphysicalmem;
		logic d_writephysicalmem;
		logic [1:0] d_physicalmem_byte_enable;
		cache_line d_physicalmem_rdata;
		logic d_physicalmem_response;
		logic DCache_hit;
	/*Arbiter Interal Signals*/
		cache_line arbiter_internal_mem_rdata;
		cache_line arbiter_d_mem_rdata;
		logic arbiter_internal_mem_response;
		logic arbiter_d_mem_response;
		cache_line arbiter_mem_wdata;
		logic arbiter_mem_write;
		logic arbiter_mem_read;
		LC_3B_word arbiter_mem_addr;
		logic [1:0] arbiter_physicalmem_byte_enable;
	/*L2 Cache Internal Signals*/
		cache_line l2_mem_rdata;
		logic l2_mem_response;
		logic l2hit;

assign physicalmem_byte_enable = arbiter_physicalmem_byte_enable;
/*End Internal Signals*/
/*Begin CPU datapath components */
cpu_datapath cpu_datapath
(
	.clk,
	.internal_mem_addr(internal_mem_addr),
	.internal_mem_wdata(internal_mem_wdata),
	.internal_mem_read(internal_mem_read),
	.internal_mem_write(internal_mem_write),
	.internal_mem_byte_enable(internal_mem_byte_enable),
	.internal_mem_rdata(internal_mem_rdata),
	.internal_mem_response(internal_mem_response),
	.d_mem_addr(d_mem_addr),
	.d_mem_wdata(d_mem_wdata),
	.d_mem_read(d_mem_read),
	.d_mem_write(d_mem_write),
	.d_mem_byte_enable(d_mem_byte_enable),
	.d_mem_rdata(d_mem_rdata),
	.DCache_enable(DCache_enable),
	.d_mem_response(d_mem_response),
	.DCache_hit(DCache_hit),
	.TRUE_BR(TRUE_BR),
	.idle_state(idle_state)
);
/*End CPU datapath components*/

/*Begin L1 I-Cache Components*/

L1_ICache L1_ICache
(

    .clk,
    .mem_addr(internal_mem_addr),
	 .mem_write(internal_mem_write),
	 .mem_wdata(internal_mem_wdata),
	 .mem_byte_enable(internal_mem_byte_enable),
	 .mem_read(internal_mem_read),
	 
    .TRUE_BR(TRUE_BR),
 
    .physicalmem_rdata(arbiter_internal_mem_rdata),
	 .physicalmem_response(arbiter_internal_mem_response),

	 .mem_rdata(internal_mem_rdata),
	 .mem_response(internal_mem_response),
    .readphysicalmem(i_readphysicalmem),
    .writephysicalmem(i_writephysicalmem),
	 .physicalmem_addr(i_physicalmem_addr),
	 .physicalmem_wdata(i_physicalmem_wdata),
	 .idle_state(idle_state)
);

/*End L1 I-Cache Components*/

/*Begin L1 D-Cache Components*/
L1_DCache L1_DCache
(

    .clk,
    .mem_addr(d_mem_addr),
	 .mem_write(d_mem_write),
	 .mem_wdata(d_mem_wdata),
	 .mem_byte_enable(d_mem_byte_enable),
	 .mem_read(d_mem_read),
	 .DCache_enable(DCache_enable),
	 
     

    .physicalmem_rdata(arbiter_d_mem_rdata),
	 .physicalmem_response(arbiter_d_mem_response),

	 .mem_rdata(d_mem_rdata),
	 .hit(DCache_hit),
	 .mem_response(d_mem_response),
    .readphysicalmem(d_readphysicalmem),
    .writephysicalmem(d_writephysicalmem),
	 .physicalmem_addr(d_physicalmem_addr),
	 .physicalmem_wdata(d_physicalmem_wdata)
);
/*End L1 D-Cache Components*/

/*Begin Arbiter Components*/
arbiter arbiter
(
	 .clk,
    .internal_mem_read(i_readphysicalmem),
	 .internal_mem_write(i_writephysicalmem),
	 .internal_mem_addr(i_physicalmem_addr),
	 .internal_mem_wdata(i_physicalmem_wdata),
	 .d_mem_read(d_readphysicalmem),
	 .d_mem_write(d_writephysicalmem),
	 .d_mem_addr(d_physicalmem_addr),
	 .d_mem_wdata(d_physicalmem_wdata), 
	 .l2_mem_rdata(l2_mem_rdata),
	 .l2_mem_response(l2_mem_response),
	 .l2hit(l2hit),
	 .d_mem_byte_enable(d_mem_byte_enable),
	 .internal_mem_byte_enable(internal_mem_byte_enable),
	 .arbiter_internal_mem_response(arbiter_internal_mem_response),
	 .arbiter_d_mem_response(arbiter_d_mem_response),
	 
	 .arbiter_mem_wdata(arbiter_mem_wdata),
	 .arbiter_mem_write(arbiter_mem_write),
	 .arbiter_mem_read(arbiter_mem_read),
	 .arbiter_mem_addr(arbiter_mem_addr),
	 .arbiter_d_mem_rdata(arbiter_d_mem_rdata),
	 .arbiter_internal_mem_rdata(arbiter_internal_mem_rdata),
	 .arbiter_physicalmem_byte_enable(arbiter_physicalmem_byte_enable)
);
/*End Arbiter Components*/
L2Cache L2Cache
(
    .clk,
	 .physicalmem_rdata(physicalmem_mem_rdata),
	 .physicalmem_response(physicalmem_mem_response),
	 .l2_mem_byte_enable(arbiter_physicalmem_byte_enable),
	 .l2_mem_addr(arbiter_mem_addr),
	 .l2_mem_wdata(arbiter_mem_wdata), //cache_line size for l2
	 .l2_mem_read(arbiter_mem_read),
    .l2_mem_write(arbiter_mem_write),


    /* Memory signals */
    .l2_mem_response(l2_mem_response),
    .l2_mem_rdata(l2_mem_rdata),  //cache line size for l2


	 .l2hit(l2hit),
	 .readphysicalmem(physicalmem_mem_read),
	 .writephysicalmem(physicalmem_mem_write),
	 .physicalmem_addr(physicalmem_mem_addr),
	 .physicalmem_wdata(physicalmem_mem_wdata)
	 
);

/*Begin L2Cache Components*/


/*End L2Cache Components*/
endmodule
